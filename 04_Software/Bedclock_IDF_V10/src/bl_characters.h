#pragma once

#include <stdio.h>

typedef struct {
    uint8_t width;
    uint8_t height;
    uint8_t *bytes;
} character_t;


uint8_t char_0_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0x07,0xf8,0x0f,0xfc,0x1f,0x3c,
            0x3e,0x1e,0x38,0x0e,0x38,0x0e,0x78,0x0e,0x38,0x1e,0x38,0x0e,0x78,0x0e,0x38,
            0x0e,0x38,0x0e,0x78,0x1e,0x38,0x0e,0x38,0x0e,0x78,0x0e,0x38,0x1e,0x38,0x0e,
            0x38,0x1e,0x38,0x3c,0x3e,0xfc,0x1f,0xf8,0x0f,0xe0,0x03,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

uint8_t char_1_bytes[] = {
            0x00,0x00,0x00,0x00,0x70,0xfc,0x7e,0xfe,0x76,0xe2,0xf0,0x70,0xe0,0xf0,0x70,
            0xe0,0xf0,0x70,0xe0,0xf0,0x70,0xe0,0xf0,0x70,0xe0,0xf0,0x70,0xe0,0x00,0x00,
            0x00,0x00 };

uint8_t char_2_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0x07,0xf0,0x1f,0xf8,0x3f,0x3c,
            0x3c,0x1c,0x78,0x1e,0x38,0x10,0x78,0x00,0x78,0x00,0x38,0x00,0x3c,0x00,0x1e,
            0x00,0x1e,0x00,0x0f,0x80,0x07,0xc0,0x03,0xc0,0x03,0xe0,0x01,0xf0,0x00,0xf8,
            0x00,0x78,0x00,0x3c,0x49,0xfc,0x7f,0xfe,0x7f,0xfc,0x3f,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

uint8_t char_3_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0x07,0xf0,0x0f,0xf8,0x3f,0x3c,
            0x3c,0x1c,0x3c,0x1e,0x38,0x00,0x78,0x00,0x38,0x00,0x38,0x00,0x1e,0xc0,0x1f,
            0x80,0x07,0xc0,0x1f,0x00,0x3c,0x00,0x38,0x00,0x78,0x00,0x70,0x00,0x78,0x1e,
            0x38,0x1e,0x78,0x3c,0x3e,0xfc,0x3f,0xf0,0x0f,0xe0,0x07,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

uint8_t char_4_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x00,
            0x00,0x1e,0x00,0x00,0x0f,0x00,0x00,0x07,0x00,0x00,0x07,0x00,0x80,0x03,0x00,
            0x80,0x03,0x00,0xc0,0x03,0x00,0xc0,0x01,0x00,0xe0,0x01,0x00,0xe0,0x70,0x00,
            0xf0,0x70,0x00,0x70,0x70,0x00,0x78,0x70,0x00,0x38,0x70,0x00,0x38,0x70,0x00,
            0x1c,0x70,0x00,0xfc,0xff,0x01,0xfe,0xff,0x01,0xfc,0xff,0x01,0x00,0x70,0x00,
            0x00,0x78,0x00,0x00,0x70,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00 };

uint8_t char_5_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf8,0x3f,0xfc,0x3f,0xf8,0x3f,0x3c,
            0x20,0x38,0x00,0x3c,0x00,0x38,0x00,0x3c,0x02,0xf8,0x0f,0xfc,0x1f,0xf8,0x3f,
            0x3c,0x78,0x28,0x78,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x70,0x1c,
            0x78,0x3c,0x78,0x78,0x3c,0xf8,0x3f,0xf0,0x1f,0xc0,0x07,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

uint8_t char_6_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x07,0x80,0x07,0x80,
            0x03,0xc0,0x03,0xc0,0x01,0xe0,0x01,0xe0,0x00,0xf0,0x00,0x70,0x00,0xf8,0x0f,
            0xf8,0x1f,0xfc,0x3f,0x3c,0x3c,0x1c,0x38,0x1e,0x78,0x1c,0x38,0x1e,0x78,0x1c,
            0x38,0x1c,0x38,0x7c,0x3e,0xf8,0x1f,0xf0,0x1f,0xe0,0x07,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

uint8_t char_7_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x3f,0xfe,0x3f,0xfe,0x3f,0x0e,
            0x3c,0x1c,0x1c,0x1e,0x1c,0x0c,0x1c,0x00,0x1e,0x00,0x0e,0x00,0x0e,0x00,0x0f,
            0x00,0x0f,0x00,0x07,0x00,0x07,0x80,0x07,0x80,0x03,0x80,0x03,0xc0,0x03,0xc0,
            0x03,0xc0,0x01,0xe0,0x01,0xe0,0x01,0xe0,0x00,0xe0,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

uint8_t char_8_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0x07,0xf0,0x1f,0xf8,0x3f,0x78,
            0x7c,0x3c,0x70,0x3c,0xf0,0x1c,0x70,0x38,0x70,0x3c,0x70,0x78,0x78,0xf0,0x3f,
            0xe0,0x1f,0xf0,0x3f,0xf8,0x7a,0x3c,0x70,0x1c,0xf0,0x1c,0xe0,0x1c,0xe0,0x1c,
            0xf0,0x3c,0xf0,0x7c,0x7c,0xf8,0x7f,0xf0,0x1f,0xc0,0x07,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

uint8_t char_9_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0x03,0xf0,0x0f,0xf8,0x1f,0x3c,
            0x3e,0x3c,0x38,0x1c,0x78,0x1e,0x38,0x1c,0x78,0x1e,0x38,0x1c,0x38,0x3c,0x3c,
            0xf8,0x3f,0xf8,0x1f,0xe0,0x1f,0x00,0x1e,0x00,0x0e,0x00,0x07,0x80,0x07,0x80,
            0x07,0x80,0x03,0xc0,0x01,0xe0,0x01,0xe0,0x01,0x60,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

uint8_t char_hyphen_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x1f,0xfc,0x1f,0xfc,0x1f,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

uint8_t char_colon_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x1e,0x1c,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x1e,0x1c,0x1c,0x00,0x00,
            0x00,0x00 };

uint8_t char_space_bytes[] = {
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00 };

const character_t characters[] = {
    {  .width = 15,  .height = 32,  .bytes = char_0_bytes },  // [0] = 0
    {  .width = 8,  .height = 32,  .bytes = char_1_bytes },  // [1] = 1
    {  .width = 16,  .height = 32,  .bytes = char_2_bytes },  // [2] = 2
    {  .width = 16,  .height = 32,  .bytes = char_3_bytes },  // [3] = 3
    {  .width = 17,  .height = 32,  .bytes = char_4_bytes },  // [4] = 4
    {  .width = 16,  .height = 32,  .bytes = char_5_bytes },  // [5] = 5
    {  .width = 15,  .height = 32,  .bytes = char_6_bytes },  // [6] = 6
    {  .width = 15,  .height = 32,  .bytes = char_7_bytes },  // [7] = 7
    {  .width = 16,  .height = 32,  .bytes = char_8_bytes },  // [8] = 8
    {  .width = 15,  .height = 32,  .bytes = char_9_bytes },  // [9] = 9
    {  .width = 14,  .height = 32,  .bytes = char_hyphen_bytes },  // [10] = -
    {  .width = 6,  .height = 32,  .bytes = char_colon_bytes },  // [11] = :
    {  .width = 14,  .height = 32,  .bytes = char_space_bytes },  // [12] = space
}; // const character_t characters[]

character_t character(char c) {
    if(c=='0') return characters[0];
    if(c=='1') return characters[1];
    if(c=='2') return characters[2];
    if(c=='3') return characters[3];
    if(c=='4') return characters[4];
    if(c=='5') return characters[5];
    if(c=='6') return characters[6];
    if(c=='7') return characters[7];
    if(c=='8') return characters[8];
    if(c=='9') return characters[9];
    if(c=='-') return characters[10];
    if(c==':') return characters[11];
    return characters[12];
}